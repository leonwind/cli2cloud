{"version":3,"sources":["styles/Documentation.module.css","assets/cloudWhite.png","pages/Documentation.tsx","pages/FrontPage.tsx","proto/ServiceServiceClientPb.ts","services/DecryptionService.ts","components/SearchBar.tsx","components/ChangeDecryptionPwd.tsx","components/NavBar.tsx","pages/Monitor.tsx","App.tsx","index.tsx","proto/service_pb.js","styles/FrontPage.module.css","styles/Monitor.module.css","styles/Modal.module.css","styles/NavBar.module.css","styles/SearchBar.module.css"],"names":["module","exports","Documentation","highlightElement","id","window","location","hash","className","styles","body","docsTitle","onClick","instruction","codeBlock","codeStyle","docsSubTitle","href","spaceToBottom","FrontPage","props","state","clientID","redirect","handleClientIDChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","to","logo","src","alt","width","height","headline","Form","onSubmit","searchForm","Group","InputGroup","Control","onChange","size","type","placeholder","Text","searchLogo","mediumText","Component","Cli2CloudClient","hostname","credentials","options","client_","hostname_","credentials_","options_","methodDescriptorRegisterClient","grpcWeb","UNARY","service_pb","request","serializeBinary","deserializeBinary","methodDescriptorGetClientById","methodDescriptorSubscribe","SERVER_STREAMING","metadata","callback","undefined","rpcCall","unaryCall","serverStreaming","DecryptionService","password","salt","iv","keyLength","numPBKDF2Iterations","key","decryptor","cryptoJS","Hex","parse","kdf","createDecryptor","keySize","iterations","hasher","SHA256","AES","mode","CBC","padding","Pkcs7","encryptedStr","encrypted","finalize","toString","Latin1","SearchBar","navigate","useNavigate","useState","setClientID","reload","e","ChangeDecryptionPwd","onClose","show","setPassword","Modal","onHide","Header","closeButton","header","Title","Body","controlId","Label","textField","Footer","Button","variant","submitButton","submitAndClose","NavBar","showPasswordBtn","onPasswordSubmit","switchToRawData","showModal","setShowModal","Navbar","expand","collapseOnSelect","Container","fluid","Brand","brand","Toggle","Collapse","Nav","buttons","Monitor","numLines","cli2CloudService","clientId","client","enterPwdFirstTime","rows","raw","URLSearchParams","URL","search","has","pathname","substring","ClientId","setId","getClientById","loadContent","highlightRow","updatePassword","afterFirstTimePassword","then","getEncrypted","newPassword","getSalt","getIv","stream","subscribe","on","response","addNewContent","getBody","error","console","content","newRows","push","line","decrypt","length","emptyRows","getId","createNewDecryptorIfEncrypted","map","row","decryptRowIfEncrypted","params","set","createDivsForRawOutput","outputArea","createDivsForAllRows","App","path","element","ReactDOM","render","StrictMode","document","getElementById","jspb","require","goog","global","self","Function","call","exportSymbol","proto","Client","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","PublishRequest","Payload","Empty","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","getBooleanFieldWithDefault","getFieldWithDefault","timestamp","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readBool","setEncrypted","readString","setSalt","setIv","readInt64","setTimestamp","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","writeBool","getField","writeString","writeInt64","setProto3BooleanField","setField","clearSalt","hasSalt","clearIv","hasIv","getTimestamp","clearTimestamp","hasTimestamp","setProto3StringField","clientid","getClientid","payload","getPayload","readMessage","setClientid","setPayload","writeMessage","getWrapperField","setWrapperField","clearClientid","hasClientid","clearPayload","hasPayload","setBody","object","extend"],"mappings":"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","file":"static/js/main.a5c2c818.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Documentation_body__IWwDV\",\"docsTitle\":\"Documentation_docsTitle__3CKf7\",\"docsSubTitle\":\"Documentation_docsSubTitle__27ERb\",\"instruction\":\"Documentation_instruction__RhGO6\",\"codeBlock\":\"Documentation_codeBlock__tKMtz\",\"codeStyle\":\"Documentation_codeStyle__FNrlX\",\"spaceToBottom\":\"Documentation_spaceToBottom__3fcPn\"};","export default __webpack_public_path__ + \"static/media/cloudWhite.ff67dd4f.png\";","import styles from \"../styles/Documentation.module.css\";\n\nexport const Documentation = () => {\n\n    const highlightElement = (id: string) => {\n        window.location.hash = id;\n    }\n\n    return (\n        <div className={styles.body}>\n            <h3 className={styles.docsTitle} id={\"installation\"} onClick={() => {highlightElement(\"installation\")}}>\n                # Installation     \n            </h3>\n\n            <h6 className={styles.instruction}>\n                Install the terminal client directly from the source by running\n                <div className={styles.codeBlock}>\n                    <code className={styles.codeStyle}>\n                        $ go get github.com/leonwind/cli2cloud/cli/cli2cloud \n                    </code>\n                </div>\n            </h6>\n\n            <h3 className={styles.docsTitle} id={\"examples\"} onClick={() => {highlightElement(\"examples\")}}>\n                # Examples \n            </h3>\n            \n            <h6 className={styles.docsSubTitle} id={\"normal-usage\"} onClick={() => {highlightElement(\"normal-usage\")}}>\n                ## Normal usage\n            </h6>\n\n            <h6 className={styles.instruction}>\n                To just pipe your terminal output from any arbitrary command, run\n                <div className={styles.codeBlock}>\n                    <code className={styles.codeStyle}>\n                    $ ping google.com | cli2cloud <br/>\n                    Your client ID: 4sYe3G <br/>\n                    Share and monitor it live from cli2cloud.com/4sYe3G <br/>\n                    <br/>\n                    PING google.com (172.217.22.142): 56 data bytes <br/>\n                    64 bytes from 172.217.22.142: icmp_seq=0 ttl=112 time=12.306 ms <br/>\n                    64 bytes from 172.217.22.142: icmp_seq=1 ttl=112 time=14.317 ms <br/>\n                    ...\n                    </code>\n                </div>\n                <br/>\n                and open <code className={styles.codeStyle}>https://cli2cloud.com/{\"{your ID}\"}</code> on any browser you have.\n                It will pipe both your <code className={styles.codeStyle}>Stdout</code> and your <code className={styles.codeStyle}>Stderr</code> output to the web.\n            </h6>\n            \n            <h6 className={styles.docsSubTitle} id={\"e2ee\"} onClick={() => {highlightElement(\"e2ee\")}}>\n                ## End-to-End encryption\n            </h6>\n\n            <h6 className={styles.instruction}>\n                Use the <code className={styles.codeStyle}>-encrypt {\"{password}\"}</code> option\n                to encrypt your data End-to-End using the <a href=\"https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_block_chaining_(CBC)\">AES CBC Mode</a> { }\n                and a 256 bit key generated based on your password using the <a href=\"https://en.wikipedia.org/wiki/PBKDF2\">PBKDF2</a> function.\n\n                <div className={styles.codeBlock}>\n                    <code className={styles.codeStyle}>\n                    $ ping google.com | cli2cloud -encrypt 1234 <br/>\n                    Your client ID: CGYWdD <br/>\n                    Share and monitor it live from cli2cloud.com/CGYWdD <br/>\n                    <br/>\n                    PING google.com (172.217.22.142): 56 data bytes <br/>\n                    64 bytes from 172.217.22.142: icmp_seq=0 ttl=112 time=14.154 ms <br/>\n                    64 bytes from 172.217.22.142: icmp_seq=1 ttl=112 time=12.565 ms <br/>\n                    ...\n                    </code>\n                </div>\n                <br/>\n\n                To decrypt the data on the web, you need to enter the same password again. \n                The server does not store your password or the hash of it and thus can't validate if your password is either correct or incorrect. \n                You will see complete garbage if you enter a wrong password :)\n                <br/>\n                <br/>\n                Use the option <code className={styles.codeStyle}>-encrypt-random</code> to generate a random secure password with 16 symbols.\n                <div className={styles.codeBlock}>\n                    <code className={styles.codeStyle}>\n                    $ ping google.com | cli2cloud -encrypt-random <br/>\n                    Your password: mruI3ubFXTww1QYf <br/>\n                    Your client ID: 56xY35 <br/>\n                    Share and monitor it live from https://cli2cloud.com/56xY35 <br/>\n                    <br/>\n                    PING google.com (142.250.201.174): 56 data bytes <br/>\n                    64 bytes from 142.250.201.174: icmp_seq=0 ttl=116 time=3.322 ms <br/>\n                    64 bytes from 142.250.201.174: icmp_seq=1 ttl=116 time=2.648 ms <br/>\n                    ... \n                    </code>\n                </div>\n            </h6>\n            \n            <h3 className={styles.docsTitle} id={\"feedback\"} onClick={() => {highlightElement(\"feedback\")}}>\n                # Feedback\n            </h3>\n            <h6 className={styles.instruction}>\n                The code is open-source available on <a href=\"https://github.com/leonwind/cli2cloud\">GitHub</a>.\n                Feel free to open a <a href=\"https://github.com/leonwind/cli2cloud/issues/new\">new Issue</a> regarding any feedback, bugs or feature requests.\n            </h6>\n\n            <div className={styles.spaceToBottom}/>\n        </div>\n    )\n}","import React, {ChangeEvent, Component, FormEvent} from \"react\";\nimport styles from \"../styles/FrontPage.module.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form } from \"react-bootstrap\";\nimport { Navigate } from \"react-router-dom\";\nimport logo from \"../assets/cloudWhite.png\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { InputGroup } from \"react-bootstrap\";\nimport {Documentation} from \"./Documentation\"\n\ninterface State {\n    clientID: string,\n    redirect: boolean\n}\n\nexport class FrontPage extends Component<{}, State> {\n    \n    constructor(props: any) {\n        super(props);\n        this.state = {\n            clientID: \"\",\n            redirect: false\n        };\n\n        this.handleClientIDChange = this.handleClientIDChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    private handleClientIDChange(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({clientID: event.target.value});\n    }\n\n    private handleSubmit(event: FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        this.setState({redirect: true})\n    } \n\n    render() {\n        if (this.state.redirect) {\n            return (\n                <Navigate to={\"/\" + this.state.clientID}/>\n            )\n        }\n\n        return (\n            <div className={styles.body}>\n                <h1 className={styles.logo}>\n                    <img src={logo} alt={\"Logo\"} width={\"100\"} height={\"100\"}/>\n                </h1>\n                \n                <h1 className={styles.headline}>\n                    Cli2Cloud\n                </h1>\n\n                <br/>\n                <br/>\n\n                <Form onSubmit={this.handleSubmit}>\n                <div className={styles.searchForm}> \n\n                    <Form.Group>\n                        <InputGroup>\n                        <Form.Control className={styles.searchForm} value={this.state.clientID} \n                            onChange={this.handleClientIDChange} size=\"lg\" type=\"text\" \n                            placeholder=\"Enter your client ID...\"/>\n                        <InputGroup.Text className={styles.searchLogo}>\n                                <SearchIcon/>\n                            </InputGroup.Text>\n                        </InputGroup>\n                    </Form.Group>\n                </div>\n                </Form>\n\n                <br/>\n                <br/>\n\n                <h6 className={styles.mediumText}>\n                    Monitor and Share Your Terminal Output with Everyone from Everywhere in Realtime.\n                </h6>\n\n                <br/>\n                <br/>\n                <br/>\n\n                <Documentation/>\n            </div>\n        )\n    }\n}","/**\n * @fileoverview gRPC-Web generated client stub for proto\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as service_pb from './service_pb';\n\n\nexport class Cli2CloudClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname;\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorRegisterClient = new grpcWeb.MethodDescriptor(\n    '/proto.Cli2Cloud/RegisterClient',\n    grpcWeb.MethodType.UNARY,\n    service_pb.Client,\n    service_pb.ClientId,\n    (request: service_pb.Client) => {\n      return request.serializeBinary();\n    },\n    service_pb.ClientId.deserializeBinary\n  );\n\n  registerClient(\n    request: service_pb.Client,\n    metadata: grpcWeb.Metadata | null): Promise<service_pb.ClientId>;\n\n  registerClient(\n    request: service_pb.Client,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: service_pb.ClientId) => void): grpcWeb.ClientReadableStream<service_pb.ClientId>;\n\n  registerClient(\n    request: service_pb.Client,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: service_pb.ClientId) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/proto.Cli2Cloud/RegisterClient',\n        request,\n        metadata || {},\n        this.methodDescriptorRegisterClient,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/proto.Cli2Cloud/RegisterClient',\n    request,\n    metadata || {},\n    this.methodDescriptorRegisterClient);\n  }\n\n  methodDescriptorGetClientById = new grpcWeb.MethodDescriptor(\n    '/proto.Cli2Cloud/GetClientById',\n    grpcWeb.MethodType.UNARY,\n    service_pb.ClientId,\n    service_pb.Client,\n    (request: service_pb.ClientId) => {\n      return request.serializeBinary();\n    },\n    service_pb.Client.deserializeBinary\n  );\n\n  getClientById(\n    request: service_pb.ClientId,\n    metadata: grpcWeb.Metadata | null): Promise<service_pb.Client>;\n\n  getClientById(\n    request: service_pb.ClientId,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: service_pb.Client) => void): grpcWeb.ClientReadableStream<service_pb.Client>;\n\n  getClientById(\n    request: service_pb.ClientId,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: service_pb.Client) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/proto.Cli2Cloud/GetClientById',\n        request,\n        metadata || {},\n        this.methodDescriptorGetClientById,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/proto.Cli2Cloud/GetClientById',\n    request,\n    metadata || {},\n    this.methodDescriptorGetClientById);\n  }\n\n  methodDescriptorSubscribe = new grpcWeb.MethodDescriptor(\n    '/proto.Cli2Cloud/Subscribe',\n    grpcWeb.MethodType.SERVER_STREAMING,\n    service_pb.ClientId,\n    service_pb.Payload,\n    (request: service_pb.ClientId) => {\n      return request.serializeBinary();\n    },\n    service_pb.Payload.deserializeBinary\n  );\n\n  subscribe(\n    request: service_pb.ClientId,\n    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<service_pb.Payload> {\n    return this.client_.serverStreaming(\n      this.hostname_ +\n        '/proto.Cli2Cloud/Subscribe',\n      request,\n      metadata || {},\n      this.methodDescriptorSubscribe);\n  }\n\n}\n\n","import * as cryptoJS from \"crypto-js\"\n\nexport class DecryptionService {\n    private keyLength: number = 8;\n    private numPBKDF2Iterations: number = 1024;\n\n    private key: cryptoJS.lib.WordArray;\n    private salt: cryptoJS.lib.WordArray;\n    private iv: cryptoJS.lib.WordArray;\n    private decryptor: any; // crypto.Cipher\n\n    public constructor(password: string, salt: string, iv: string) {\n        this.salt = cryptoJS.enc.Hex.parse(salt);\n        this.iv = cryptoJS.enc.Hex.parse(iv);\n        this.key = this.kdf(password, this.salt)\n\n        this.createDecryptor() \n    }\n\n    private kdf(password: string, salt: cryptoJS.lib.WordArray): cryptoJS.lib.WordArray {\n        return cryptoJS.PBKDF2(password, salt, {\n            keySize: this.keyLength, \n            iterations: this.numPBKDF2Iterations, \n            hasher: cryptoJS.algo.SHA256\n        });\n    }\n\n    public createDecryptor() {\n        this.decryptor = cryptoJS.algo.AES.createDecryptor(this.key, {\n            mode:  cryptoJS.mode.CBC,\n            iv: this.iv,\n            padding: cryptoJS.pad.Pkcs7,\n        });\n    }\n\n    public decrypt(encryptedStr: string): string {\n        const encrypted = cryptoJS.enc.Hex.parse(encryptedStr);\n        return this.decryptor.finalize(encrypted).toString(cryptoJS.enc.Latin1);\n    }\n}","import {FormEvent, useState} from \"react\";\nimport styles from \"../styles/SearchBar.module.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport { InputGroup } from \"react-bootstrap\";\n\nexport const SearchBar = () => {\n    const navigate = useNavigate();\n    const [clientID, setClientID] = useState(\"\");\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        navigate(\"/\" + clientID);\n        window.location.reload();\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n                <div className={styles.searchForm}>\n                    <Form.Group>\n                        <InputGroup>\n                            <Form.Control className={styles.searchForm} value={clientID} \n                                onChange={e => setClientID(e.target.value)} type=\"text\" \n                                placeholder=\"Search your client ID...\"/>\n                            <InputGroup.Text className={styles.searchForm}>\n                                <SearchIcon/>\n                            </InputGroup.Text>\n                        </InputGroup>\n                    </Form.Group>\n                </div>\n        </Form>\n    )\n}","import {useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport styles from \"../styles/Modal.module.css\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\n\n\nexport const ChangeDecryptionPwd = ({onSubmit, onClose, show}) => {\n    const [password, setPassword] = useState(\"\");\n\n    if (!show) {\n        return null;\n    }\n\n    const submitAndClose = (password: string) => {\n        onSubmit(password);\n        setPassword(\"\");\n        onClose();\n    }\n\n    return (\n        <Modal show={show} onHide={onClose}>\n            <Modal.Header closeButton className={styles.header}>\n                <Modal.Title>Enter Password</Modal.Title>\n            </Modal.Header>\n            \n            <Modal.Body className={styles.body}>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Enter your Password to decrypt the output:</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" className={styles.textField} \n                            value={password} \n                            onChange={e => setPassword(e.target.value)}/>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            \n            <Modal.Footer className={styles.body}>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    Close\n                </Button>\n            \n                <Button className={styles.submitButton} onClick={() => {submitAndClose(password)}}>\n                    Update Password\n                </Button>\n            </Modal.Footer>\n      </Modal>\n    )\n}","import styles from \"../styles/NavBar.module.css\";\nimport {SearchBar} from \"./SearchBar\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport {ChangeDecryptionPwd} from \"./ChangeDecryptionPwd\"\nimport logo from \"../assets/cloudWhite.png\";\n\nexport const NavBar = ({showPasswordBtn, onPasswordSubmit, switchToRawData}) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const handleShowModal = () => setShowModal(true);\n    const handleCloseModal = () => setShowModal(false);\n\n    return (\n        <>\n        <Navbar className={styles.body} expand={\"sm\"} variant={\"dark\"} collapseOnSelect>\n            <Container fluid>\n                <Navbar.Brand className={styles.brand} href={\"/\"}>\n                    <img src={logo} alt={\"Cli2Cloud\"} width={\"50\"} height={\"50\"}/> \n                </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ms-auto\">\n                    <SearchBar/>\n\n                    {showPasswordBtn &&\n                    <Button variant=\"dark\" className={styles.buttons} onClick={handleShowModal}>\n                        Change Password\n                    </Button>\n                    }\n\n                    <Button variant=\"dark\" className={styles.buttons} onClick={switchToRawData}>\n                        Raw\n                    </Button>\n                </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n\n        <ChangeDecryptionPwd show={showModal} onClose={handleCloseModal} onSubmit={onPasswordSubmit}/>\n        </>\n    )\n}","import {Component} from \"react\";\nimport styles from \"../styles/Monitor.module.css\";\nimport {Cli2CloudClient} from \"../proto/ServiceServiceClientPb\"\nimport {Client, ClientId, Payload} from \"../proto/service_pb\"\nimport {DecryptionService} from \"../services/DecryptionService\"\nimport {NavBar} from \"../components/NavBar\"\nimport { ChangeDecryptionPwd } from \"../components/ChangeDecryptionPwd\";\n\n\ninterface Row {\n    content: string,\n    line: number,\n}\n\ninterface State {\n    encrypted: boolean,\n    enterPwdFirstTime: boolean,\n    decryptor: DecryptionService | null,\n    rows: Row[],\n    raw: boolean,\n}\n\nexport class Monitor extends Component<{}, State> {\n    private numLines: number;\n    private cli2CloudService: Cli2CloudClient;\n    private clientId: ClientId;\n    private client: Promise<Client>;\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            encrypted: false,\n            decryptor: null,\n            enterPwdFirstTime: true,\n            rows: [],\n            raw: new URLSearchParams(new URL(window.location.href).search).has(\"raw\"),\n        };\n\n        this.numLines = 1;\n        this.cli2CloudService = new Cli2CloudClient(\"http://cli2cloud.com/api\", null, null);\n\n        const id = window.location.pathname.substring(1);\n        \n        this.clientId = new ClientId();\n        this.clientId.setId(id);\n\n        this.client = this.cli2CloudService.getClientById(this.clientId, {})\n    }\n\n    componentDidMount() {\n        this.loadContent = this.loadContent.bind(this);\n        this.highlightRow = this.highlightRow.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n        this.afterFirstTimePassword = this.afterFirstTimePassword.bind(this);\n        this.switchToRawData = this.switchToRawData.bind(this);\n\n        this.client.then((client) => {this.setState({encrypted: client.getEncrypted()})});\n        this.loadContent();\n    }\n\n    private updatePassword(newPassword: string) {\n        this.createDecryptor(newPassword);\n    }\n\n    private createDecryptor(password: string) {\n        this.client.then((client: Client) => {\n            this.setState({decryptor: new DecryptionService(password, client.getSalt(), client.getIv())});\n        });\n    }\n\n    private loadContent() {\n        const stream = this.cli2CloudService.subscribe(this.clientId, {});\n\n        stream.on(\"data\", (response: Payload) => {\n            this.addNewContent(response.getBody())\n        });\n\n        stream.on(\"error\", (error: Error): void => {\n            console.error(error);\n        });\n    }\n\n    private addNewContent(content: string) {\n        let newRows: Row[] = this.state.rows;\n        newRows.push({\n            content: content,\n            line: this.numLines,\n        });\n\n        this.numLines += 1\n        this.setState({rows: newRows});\n    } \n\n    private highlightRow(line: number) {\n        window.location.hash = line.toString();\n    }\n\n    private decryptRowIfEncrypted(content: string): string {\n        if (this.state.encrypted && this.state.decryptor !== null) {\n            return this.state.decryptor.decrypt(content);\n        }\n        return content; \n    }\n\n    private createNewDecryptorIfEncrypted() {\n        // Since we decrypt everything again from the beginning, \n        // we need to init the decryptor from the beginning as well.\n        if (this.state.decryptor !== null) {\n            this.state.decryptor.createDecryptor();\n        }\n    }\n\n    private createDivsForAllRows(): JSX.Element[] | JSX.Element {\n        if (this.state.rows.length === 0) {\n            return [<div className={styles.emptyRows}>\n                No output found for client \"{this.clientId.getId()}\".\n            </div>];\n        }\n\n        this.createNewDecryptorIfEncrypted() \n        return this.state.rows.map((row: Row) => \n            <div className={styles.row} id={row.line.toString()} key={row.line}>\n                <span className={styles.line} onClick={() => this.highlightRow(row.line)}>\n                    {row.line}\n                </span>\n                <span className={styles.content}>\n                    {this.decryptRowIfEncrypted(row.content)}\n                </span>\n            </div>\n        );\n    }\n\n    private createDivsForRawOutput(): JSX.Element[] | JSX.Element {\n        if (this.state.rows.length === 0) {\n            return <div>No output found for client \"{this.clientId.getId()}.\"</div>\n        }\n\n        this.createNewDecryptorIfEncrypted()\n        return this.state.rows.map((row: Row) => \n            <div key={row.line}>{this.decryptRowIfEncrypted(row.content)}</div> \n        );\n    }\n\n    private switchToRawData() {\n        let params = new URLSearchParams(new URL(window.location.href).search);\n        params.set(\"raw\", \"true\");\n        window.location.search = params.toString()\n\n        this.setState({raw: true});\n    }\n\n    private afterFirstTimePassword() {\n        this.setState({enterPwdFirstTime: false});\n    }\n\n    render() {\n        if (this.state.raw) {\n            return this.createDivsForRawOutput()\n        }\n\n        return (\n            <>\n                {this.state.encrypted && this.state.decryptor === null &&\n                <ChangeDecryptionPwd show={this.state.enterPwdFirstTime} onSubmit={this.updatePassword} onClose={this.afterFirstTimePassword}/>}\n\n                <NavBar showPasswordBtn={this.state.encrypted} onPasswordSubmit={this.updatePassword} switchToRawData={this.switchToRawData}/>\n                <div className={styles.body}>\n                    <div className={styles.outputArea}>\n                        {this.createDivsForAllRows()}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}","import { \n    BrowserRouter, \n    Routes, \n    Route \n} from \"react-router-dom\";\nimport {FrontPage} from './pages/FrontPage'\nimport {Monitor} from './pages/Monitor'\n\nexport function App (){\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<FrontPage />} />\n                <Route path=\"/:clientID\" element={<Monitor />} />\n            </Routes> \n        </BrowserRouter>         \n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// source: service.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\ngoog.exportSymbol('proto.proto.Client', null, global);\ngoog.exportSymbol('proto.proto.ClientId', null, global);\ngoog.exportSymbol('proto.proto.Empty', null, global);\ngoog.exportSymbol('proto.proto.Payload', null, global);\ngoog.exportSymbol('proto.proto.PublishRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.proto.Client = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.proto.Client, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.proto.Client.displayName = 'proto.proto.Client';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.proto.ClientId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.proto.ClientId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.proto.ClientId.displayName = 'proto.proto.ClientId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.proto.PublishRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.proto.PublishRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.proto.PublishRequest.displayName = 'proto.proto.PublishRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.proto.Payload = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.proto.Payload, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.proto.Payload.displayName = 'proto.proto.Payload';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.proto.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.proto.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.proto.Empty.displayName = 'proto.proto.Empty';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.proto.Client.prototype.toObject = function(opt_includeInstance) {\n  return proto.proto.Client.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.proto.Client} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.Client.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    encrypted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    salt: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    iv: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.proto.Client}\n */\nproto.proto.Client.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.proto.Client;\n  return proto.proto.Client.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.proto.Client} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.proto.Client}\n */\nproto.proto.Client.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setEncrypted(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSalt(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIv(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.proto.Client.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.proto.Client.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.proto.Client} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.Client.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEncrypted();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool encrypted = 1;\n * @return {boolean}\n */\nproto.proto.Client.prototype.getEncrypted = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.setEncrypted = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string salt = 2;\n * @return {string}\n */\nproto.proto.Client.prototype.getSalt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.setSalt = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.clearSalt = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.proto.Client.prototype.hasSalt = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string iv = 3;\n * @return {string}\n */\nproto.proto.Client.prototype.getIv = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.setIv = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.clearIv = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.proto.Client.prototype.hasIv = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional int64 timestamp = 4;\n * @return {number}\n */\nproto.proto.Client.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.setTimestamp = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.proto.Client} returns this\n */\nproto.proto.Client.prototype.clearTimestamp = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.proto.Client.prototype.hasTimestamp = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.proto.ClientId.prototype.toObject = function(opt_includeInstance) {\n  return proto.proto.ClientId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.proto.ClientId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.ClientId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.proto.ClientId}\n */\nproto.proto.ClientId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.proto.ClientId;\n  return proto.proto.ClientId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.proto.ClientId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.proto.ClientId}\n */\nproto.proto.ClientId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.proto.ClientId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.proto.ClientId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.proto.ClientId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.ClientId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string Id = 1;\n * @return {string}\n */\nproto.proto.ClientId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.proto.ClientId} returns this\n */\nproto.proto.ClientId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.proto.PublishRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.proto.PublishRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.proto.PublishRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.PublishRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    clientid: (f = msg.getClientid()) && proto.proto.ClientId.toObject(includeInstance, f),\n    payload: (f = msg.getPayload()) && proto.proto.Payload.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.proto.PublishRequest}\n */\nproto.proto.PublishRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.proto.PublishRequest;\n  return proto.proto.PublishRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.proto.PublishRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.proto.PublishRequest}\n */\nproto.proto.PublishRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.proto.ClientId;\n      reader.readMessage(value,proto.proto.ClientId.deserializeBinaryFromReader);\n      msg.setClientid(value);\n      break;\n    case 2:\n      var value = new proto.proto.Payload;\n      reader.readMessage(value,proto.proto.Payload.deserializeBinaryFromReader);\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.proto.PublishRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.proto.PublishRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.proto.PublishRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.PublishRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClientid();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.proto.ClientId.serializeBinaryToWriter\n    );\n  }\n  f = message.getPayload();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.proto.Payload.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ClientId clientId = 1;\n * @return {?proto.proto.ClientId}\n */\nproto.proto.PublishRequest.prototype.getClientid = function() {\n  return /** @type{?proto.proto.ClientId} */ (\n    jspb.Message.getWrapperField(this, proto.proto.ClientId, 1));\n};\n\n\n/**\n * @param {?proto.proto.ClientId|undefined} value\n * @return {!proto.proto.PublishRequest} returns this\n*/\nproto.proto.PublishRequest.prototype.setClientid = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.proto.PublishRequest} returns this\n */\nproto.proto.PublishRequest.prototype.clearClientid = function() {\n  return this.setClientid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.proto.PublishRequest.prototype.hasClientid = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Payload payload = 2;\n * @return {?proto.proto.Payload}\n */\nproto.proto.PublishRequest.prototype.getPayload = function() {\n  return /** @type{?proto.proto.Payload} */ (\n    jspb.Message.getWrapperField(this, proto.proto.Payload, 2));\n};\n\n\n/**\n * @param {?proto.proto.Payload|undefined} value\n * @return {!proto.proto.PublishRequest} returns this\n*/\nproto.proto.PublishRequest.prototype.setPayload = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.proto.PublishRequest} returns this\n */\nproto.proto.PublishRequest.prototype.clearPayload = function() {\n  return this.setPayload(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.proto.PublishRequest.prototype.hasPayload = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.proto.Payload.prototype.toObject = function(opt_includeInstance) {\n  return proto.proto.Payload.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.proto.Payload} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.Payload.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    body: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.proto.Payload}\n */\nproto.proto.Payload.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.proto.Payload;\n  return proto.proto.Payload.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.proto.Payload} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.proto.Payload}\n */\nproto.proto.Payload.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBody(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.proto.Payload.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.proto.Payload.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.proto.Payload} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.Payload.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBody();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string body = 1;\n * @return {string}\n */\nproto.proto.Payload.prototype.getBody = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.proto.Payload} returns this\n */\nproto.proto.Payload.prototype.setBody = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.proto.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.proto.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.proto.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.proto.Empty}\n */\nproto.proto.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.proto.Empty;\n  return proto.proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.proto.Empty}\n */\nproto.proto.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.proto.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.proto.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.proto);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"FrontPage_body__2PC_s\",\"logo\":\"FrontPage_logo__2Ic9W\",\"headline\":\"FrontPage_headline__2T9fu\",\"mediumText\":\"FrontPage_mediumText__2jR0W\",\"searchForm\":\"FrontPage_searchForm__2PdXh\",\"searchLogo\":\"FrontPage_searchLogo__kwRKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Monitor_body__3kp7U\",\"outputArea\":\"Monitor_outputArea__1pOan\",\"row\":\"Monitor_row__ORIxX\",\"line\":\"Monitor_line__34pC8\",\"content\":\"Monitor_content__2utJ0\",\"emptyRows\":\"Monitor_emptyRows__2XXnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Modal_header__semIl\",\"body\":\"Modal_body__3P3nB\",\"textField\":\"Modal_textField__1TLFn\",\"submitButton\":\"Modal_submitButton__2wpBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"NavBar_body__2im3K\",\"brand\":\"NavBar_brand__2HFCD\",\"buttons\":\"NavBar_buttons__3BT2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchBar_searchForm__2O7jG\"};"],"sourceRoot":""}